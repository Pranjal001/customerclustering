# -*- coding: utf-8 -*-
"""K_means_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T4_0OCznr89ZBTZATIy41fUl0vsb5jXE
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans

"""Data collection and analysis"""

customer_Data = pd.read_csv('/content/Mall_Customers.csv')

customer_Data.head()

customer_Data.shape

customer_Data.info()

customer_Data.isnull().sum()

"""Choosing features as annual income and spending score for clustering"""

x = customer_Data.iloc[:,[3,4]].values

print(x)

"""Choosing a optimal number of clusters using WCSS(within clusters sum of squares)

"""

wcss = []
for i in range(1,11):
  kmeans = KMeans(n_clusters=i , init ='k-means++' , random_state = 42)
  kmeans.fit(x)
  wcss.append(kmeans.inertia_)

"""plotting the elbow graph to choose an optimal k"""

sns.set()
plt.plot(range(1,11), wcss)
plt.title('Elbow graph')
plt.xlabel('Number of cluster (k)')
plt.ylabel('WCSS')
plt.show()

"""the optimal breaking point for clusters seems to be 3 and 5, so choosing 5 as cluster size

Now training the model

---


"""

kmeans = KMeans(n_clusters=5 , init ='k-means++' , random_state = 8)

#returning a label for each data point
Y = kmeans.fit_predict(x)
print(Y)

"""visualizing the cluster assignment via graph"""

plt.figure(figsize = (8,8))
plt.scatter(x[Y==0,0] , x[Y ==0,1] , s = 50 , c= 'green' , label = 'Cluster 1')
plt.scatter(x[Y==1,0] , x[Y ==1,1] , s = 50 , c= 'blue' , label = 'Cluster 2')
plt.scatter(x[Y==2,0] , x[Y ==2,1] , s = 50 , c= 'red' , label = 'Cluster 3')
plt.scatter(x[Y==3,0] , x[Y ==3,1] , s = 50 , c= 'yellow' , label = 'Cluster 4')
plt.scatter(x[Y==4,0] , x[Y ==4,1] , s = 50 , c= 'violet' , label = 'Cluster 5')

plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1] , s =100 , c = 'black' , label = 'Centroid')

plt.title('Customer cluster')
plt.xlabel('Annual Income')
plt.xlabel('Spending Score')
plt.show()

